@namespace("io.simplesource.saga.serialization.avro.generated")
protocol SagaSchemas {
  record AvroActionCommand {
    string commandId;
    bytes command;
    string actionType;
  }

  record AvroActionRequest {
    string sagaId;
    string actionId;
    AvroActionCommand actionCommand;
    boolean isUndo;
  }

  record AvroSagaError {
    string reason;
    string message;
  }

  record AvroActionUndoCommand {
    bytes command;
    string actionType;
  }

  record AvroActionUndoCommandOption {
    union { AvroActionUndoCommand, null } undoCommand;
  }

  record AvroActionResponse {
    string sagaId;
    string actionId;
    string commandId;
    union { array<AvroSagaError>, AvroActionUndoCommandOption } result;
  }

  record AvroSagaResponse {
    string sagaId;
    union { array<AvroSagaError>, long } result;
  }

  record AvroSagaAction {
    string actionId;
    AvroActionCommand actionCommand;
    union { AvroActionCommand, null } undoCommand;
    array<string> dependencies;
    string actionStatus;
    union { array<AvroSagaError>, null } actionErrors;
  }

  record AvroSaga {
    string sagaId;
    map<AvroSagaAction> actions;
    string sagaStatus;
    union { array<AvroSagaError>, null } sagaErrors;
    long sequence;
  }

  record AvroSagaRequest {
    string sagaId;
    AvroSaga initialState;
  }

  record AvroSagaTransitionInitial {
    AvroSaga sagaState;
  }

  record AvroSagaTransitionActionStatusChange {
    string sagaId;
    string actionId;
    string actionStatus;
    union { array<AvroSagaError>, null } actionErrors;
  }

  record AvroSagaTransitionSagaStatusChange {
    string sagaId;
    string sagaStatus;
    union { array<AvroSagaError>, null } sagaErrors;
  }

  record AvroSagaTransitionList {
    array<AvroSagaTransitionActionStatusChange> actionChanges;
  }

  record AvroSagaTransition {
    union {
      AvroSagaTransitionInitial,
      AvroSagaTransitionActionStatusChange,
      AvroSagaTransitionSagaStatusChange,
      AvroSagaTransitionList
    } transition;
  }

  record AvroTuple2 {
    bytes v1;
    bytes v2;
  }
}
